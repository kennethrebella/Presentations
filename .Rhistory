fit <- lm(y~x)
predict(fit,data.frame(x=1), interval="confidence")
library(ggplot2)
n <- 40
lambda <- 0.2
exp = NULL
for (i in 1 : 1000) exp = c(exp, mean(rexp(n, lambda)))
ggplot(exp , aes(exp, fill = "blue"))
qplot(exp, aes(fill= "blue"))
qplot(exp)
qplot(exp)+geom_vline(xintercept= mean(exp))
qplot(exp, aes(fill = "blue"))+geom_vline(xintercept= mean(exp), color = "red")
plot(exp)
hist(exp)
test <- rnorm(1000, 5)
hist(test)
mean(test)
S <- (1/lambda)
set.seed(0)
n <- 40
lambda <- 0.2
exp = NULL
for (i in 1 : 1000) exp = c(exp, mean(rexp(n, lambda)))
observed_mean <- mean(exp)
observed_mean
theoretical_mean <-  1/lambda
theoretical_mean
observed_var <- var(exp)
theo_sd <- (1/lambda)
theo_sample_var <- S^2/n
theo_sample_var <- theo_sd^2/n
norm_exp <- (exp-obeserved_mean)/ sd(exp)
norm_exp <- (exp-observed_mean)/ sd(exp)
mean(norm_exp)
sd(norm_exp)
sd(exp)
test <- exp-observed_mean
mean(test)
sd(test)
library(ggplot2)
p <- ggplot(data = data.frame(exp), aes(x = exp))
p
p + geom_histogram(aes(y= density))
p + geom_histogram(aes(y = ..density..)
)
p + geom_histogram(aes(y = ..density..), fill = "blue")
p+geom_histogram()
p <- ggplot(data = data.frame(exp), aes(x = exp))
p<- p+geom_histogram(fill = "blue")
p
p <- p +stat_function(fun = dnorm, arg = list(mean = 5, sd = sd(observed_mean)))
p
p <- p +stat_function(fun = dnorm, arg = list(mean = 5, sd = sd(exp)))
p
p <- ggplot(data = data.frame(exp), aes(x = exp))
p<- p+geom_histogram(fill = "blue", color = "black")
p <- p +stat_function(fun = dnorm, arg = list(mean = 5, sd = sd(observed_mean)))
p
library(swirl)
rm(list=ls())
swirl()
3.5
expect_dice
dice_high
expect_dice(dice_high)
expect_dice(dice_low)
edh+edl.2
edh+edl/2
(edh+edl)/2
integrate(myfunc(0:2))
integrate(myfunc(0,2))
myfunc
integrate(myfunc,0,2)
spop
mean(spop)
allsam
apply(allsam, 1, mean)
mean(smeans)
data(toothgrowth)
data(ToothGrowth)
head(ToothGrowth)
summary(ToothGrowth)
var(ToothGrowth$len)
mean(ToothGrowth$len)
hist(ToothGrowth$len)
hist(ToothGrowth$dose)
rm(ToothGrowth$len)
rm(ToothGrowth)
data(mtcars)
head(mtcars)
mpg<- mtcars$mpg
wt<- mtcars$wt
plot(mpg, wt)
abline(lm(mpg~wt))
fit <- lm(mpg~wt)
abline(fit, col= "blue")
library(ggplot2)
p<- ggplot(data = mtcars, aes(x = mpg, y= wt))
p
p + geom_points
p + geom_point()
p <- p + geom_points() + geom_smooth( method = "lm")
p <- p + geom_point() + stat_smooth( method = "lm")
p
?lm
fit <- lm(mpg ~ wt)
fit
resid(fit)
plot(resid(fit))
abline(h = 0)
r <- resid(fit)
var(r)
summary(fit)$sigma
summary(fit)
1.96(30)
1.96*30
1100-60
111.96*10
1.96*10
1100-19.6
n <- 9
mn <- 1100
s <- 30
mn + c(-1,1) * qt(.95, n-1) * s/sqrt(n)
qt(.95, 9)
sd <- (2.1, 2.6, 1.5, 0.3 )
sd <- c(2.1, 2.6, 1.5, 0.3 )
-2 + c(-1,1)*qt(.95, 8) * sd/3
t.test(-2)
sqrt(.6)
mn <- 2
mn <- -2
old_mean <- 5
old_sd <- sqrt(.68)
n <-10
new_mean <- 3
new_sd <- sqrt(.6)
test1 <- new_mean + c(-1,1)*qt(.95, n-1)*new_sd/sqrt(n)
test2 <- old_mean + c(-1,1)*qt(.95, n-1)*old_sd/sqrt(n)
test1-test2
s <- (9*.6)+(9*.68)/18
-2 +c(-1,1)*qt(.95, 18)*s*(1/5)^.5
s<- sqrt(s)
-2 +c(-1,1)*qt(.95, 18)*s*(1/5)^.5
.5/100
1.96*.005
4+c(-1,1)* .0098
nx <- 9
ny <- 9
mnx <- -3
mny <- 1
sdx <- 1.5
sdy <- 1.8
s2p <- 9
s2p <- ((nx -1)*sdx^2 + (ny -1)*sdy^2)/(nx + ny- 2)
sp <- sqrt(s2p)
mny- mnx + c(-1,1) * qt(.9, nx + ny - 2)*sp*(sqrt(1/nx + 1/ny)
)
mnx- mny + c(-1,1) * qt(.9, nx + ny - 2)*sp*(sqrt(1/nx + 1/ny))
?t.test
library(UsingR); data(father.son)
t.test(father.son$sheight - father.son$fheight)
rm(father.son)
data(ToothGrowth)
head(ToothGrowth)
View(ToothGrowth)
library(ggplot2)
qplot(ToothGrowth, x = dose, y= len)
qplot(data = ToothGrowth, x = dose, y= len)
qplot(data = ToothGrowth, x = supp, y= len, facet = .~supp)
qplot(data = ToothGrowth, x = dose, y= len, facet = .~supp)
qplot(data = ToothGrowth, x = dose, y= len, facet_grid = .~supp)
tooth <-data(ToothGrowth)
tooth$dose <- as.factor(tooth$dose)
tooth <- data(ToothGrowth)
tooth
rm(tooth)
tooth <- data(ToothGrowth)
rm(tooth)
rm(ToothGrowth)
data(ToothGrowth)
tooth<- ToothGrowth
OJ <- tooth[tooth$supp == "OJ",]
VC <- tooth[tooth$supp == "VC",]
View(VC)
tapply(VC$len, VC$dose, mean )
summary(VC)
tapply(VC$len, VC$dose, summary )
t.test(OJ)
p <- ggplot(tooth, aes(y= len, x = supp))+ geom_boxplot
p <- ggplot(tooth, aes(y= len, x = supp))+ geom_boxplot()
p
mean(OJ$len)
mean(VC$len)
set.seed(0)
n <- 40
lambda <- 0.2
exp = NULL
for (i in 1 : 1000) exp = c(exp, mean(rexp(n, lambda)))
data <- data.frame(exp)
hist(OJ$len)
hist(VC$len)
?ToothGrowth
data(mtcars)
head(mtcars)
?mtcars
manual <- mtcars[mtcars$am == 1,]
auto <- mtcars[mtcars$am == 0,]
plot(auto$mpg)
?step
?swiss
sample(15, 0:1)
?sample
sample(0:1, 15)
x <- sample(0:1, 15, replace = TRUE)
mean(x)
fit <- lm(mpq~.)
fit <- lm(mpq~., data = mtcars)
fit <- lm(mpg~., data = mtcars)
summary(fit)
require(stat)
require(graphics)
pairs(mtcars, panel= panel.smooth)
quartz()
pairs(mtcars, panel= panel.smooth)
?mtcars
plot(mtcars$mpg)
abline(fit)
plot(mtcars$mpg, mtcars$am)
abline(fit)
plot(mtcars)
abline(fit)
rm(x)
q1 <- lm(mpg~cyl + wt, data = mtcars)
q1
1.508*3
summary(q1)
q1 <- lm(mpg~as.factor(cyl) + wt, data = mtcars)
summary(q1)
q2 <- lm(mpg~as.factor(cyl), data = mtcars)
summary(q2)
?lm.influence
fit3 <- lm(mpg~ as.factor(cyl)*wt, data= mtcars)
summary(fit3)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit5 <- lm(y~x)
hatvalue(fit5)
hatvalues(fit5)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit6 <- lm(y~x)
summary(fit6)
dfbetas(fit6)
data(mtcars)
manual <- mtcars[mtcars$am == 1,]
auto <- mtcars[mtcars$am == 0,]
all_model <- (lm(mpg~., data = mtcars))
summary(all_model)
auto_model <- lm(mpg~., data = auto)
summary(auto_model)
manual_model <- lm(mpg~., data = manual)
test <- lm(mpg~ am+gear+carb+wt+qsec, data= mtcars)
summary(test)
?step
data(swiss)
par(mfrow= c(2,2))
fit <- lm(Fertility ~. , data = swiss)
plot(fit)
quartz()
plot(fit)
par(mfrow= c(2,2))
plot(fit)
rm(swiss)
rm(fit)
quartz()
plot(test)
lm.influence(test)
lm.influence(test)$hat
?aov
aov_model <- (aov(mpg~., data = mtcars))
summary(aov_model)
t.test(mtcars)
t.test(auto~manual)
t.test(auto)
t.test(manual)
t.test(manual$mpg)
t.test(auto$mpg)
mtcars$am <- factor(c("Automatic", "Manual"))
data(mtcars)
head(mtcars)
mtcars$am <- factor(mtcars$am,labels=c("Automatic","Manual"))
mtcars$am <- factor(mtcars$am,labels=c("Automatic","Manual"))
auto <- mtcars[mtcars$am == "Automatic",]
library(swirl)
swirl()
fit <- lm(child~parent, data = galton)
sqrt(sum(fit$residuals^2/ n-2))
sqrt(sum(fit$residuals^2) / (n - 2))
summary(fit)$sigma
sqrt(deviance(fit)/(n-2))
mu <- mean(galton$child)
sTot <- galton$child - mu
sTot <- sum((galton$child-mu)^2)
s
sRes <- deviance(galton$child)
?deviance
sRes <- deviance(fit)
1 - (sRes/sTot)
1 - sRes/sTot
summary(fit)$r
summary(fit)$r.squared
cor(child, parent, data = galton)
cor(galton$child, galton$parent)
cor(galton$parent,galton$child)^2
ones <- rep(1, nrow(galton))
lm(child ~ ones + parent -1, galton)
lm(child ~ parent,
| galton)
lm(child ~ parent,galton)
lm(child ~ 1, galton)
head(trees)
fit <- lm(Volume ~ Girth + Height + Constant -1, trees)
trees2<- eliminate("Girth", trees)
head(trees2)
fit2 <- lm(Volume ~ Height + Constant -1, trees2)
lapply(list(fit, fit2), coef)
all <- lm(Fertility ~., swiss)
summary(all)
summary(lm(Fertility ~ agriculture, swiss))
summary(lm(Fertility ~ Agriculture, swiss))
cor(swiss$Examination, swiss$Education)
cor(swiss$Agriculture, swiss$Education)
makelms()
ec <- swiss$Examination + swiss$Catholic
efit <- lm(Fertility ~ Agriculture + Catholic + Education + Examination +Infant.Mortality + ec, swiss)
coef(fit) - coef(efit)
all$coefficients-efit$coefficients
6
dim(InsectSprays)
head(InsectSprays)
head(InsectSprays,15)
sA
sA[,2]
InsectSprays[,2]
summary(InsectSprays[,2])
sapply(class, InsectSparys)
sapply(class, InsectSprays)
sapply(InsectSprays, class)
fit <- lm(count~spray, InsectSprays)
summary(fit)$coef
est <- fit[,1]
est <- summary(fit)coef[,1]
est <- summary(fit)$coef[,1]
mean(sA)
mean(sB)
nfit <- lm(count~spray -1, InsectSprays)
summary(nfit)
summary(nfit)$coef
InsectSprays$spary <- relevel(C)
?relevel
InsectSprays$spary <- relevel(InsectSprays$spary, "C")
InsectSprays$spary <- relevel(InsectSprays$spray, "C")
spray2 <- relevel(InsectSprays$spray,\"C\")
spray2 <- relevel(InsectSprays$spray,"C")
fit2 <- lm(count~spray, spray2)
fit2 <- lm(count~spray2, InsectSprays)
summary(fit2)$coef
mean(sC)
(fit$coef[2])-(fit$coef[3])/ 1.6011
(fit$coef[2]-fit$coef[3])/1.6011
dim(hunger)
948
names(hunger)
fit <- lm(Numeric~Year, hunger)
summary(fit)$coef
lmf(hunger[hunger$Sex == "Female",10] ~hunger[hunger$Sex == "Female",5], hunger )
lmf <- lm(hunger[hunger$Sex == "Female",10] ~hunger[hunger$Sex == "Female",5], hunger )
lmF <- lm(Numeric[Sex = "Female"]~ Year[Sex == "Female"], hunger )
lmF <- lm(Numeric[Sex == "Female"]~ Year[Sex == "Female"], hunger )
lmF <- lm(Numeric[Sex == "Male"]~ Year[Sex == "Male"], hunger )
lmM <- lm(Numeric[Sex == "Male"]~ Year[Sex == "Male"], hunger )
lmBoth <- lm(Numeric ~ Year + Sex, hunger)
summary(lmBoth)
lmInter <- lm(Numeric~Year + Sex + Sex*Year, hunger)
summary(lmInter)
data(mtcars)
mtcars$am <- factor(mtcars$am,labels=c("Automatic","Manual"))
all_model <- (lm(mpg~., data = mtcars))
model1 <- lm(mpg ~ am, mtcars)
summary(model1)$coef
model2 <- lm(mpg ~ am + wt, mtcars)
summary(model2)$coef
model2 <- lm(mpg ~ am + wt+ car + disp, mtcars)
model2 <- lm(mpg ~ am + wt+ cyl + disp, mtcars)
summary(model2)$coef
best_fit <- step(init_fit, direction = "both")
best_fit <- step(all_model, direction = "both")
summary(best_fit)
auto <- mtcars[am == "Automatic",]
manual <- mtcars[am == "Manual", ]
auto <- mtcars[mtcars$am == "Automatic",]
manual <- mtcars[mtcars$am == "Manual", ]
autofit <- lm(mpg ~ ., data = auto)
manualfit <- lm(mpg ~ ., data = manual)
autofit <- lm(mpg ~., data = auto)
manualfit <- lm(mpg ~., data = manual)
autofit <- lm(mpg~., data = auto)
fit <- lm(mpg~., data = auto)
all_model <- (lm(mpg~., data = mtcars))
lm(mpg~ am, auto)
lm(mpg~am, mtcars)
head(auto)
auto$am <- as.numeric(auto$am)
head(auto)
lm(mpg~ am, auto)
fit <- lm(mpg~., data = auto)
fit
summary(fit)
fit1 <- lm(mpg~ am + wt)
fit1 <- lm(mpg~ am + wt, data = mtcars)
summary(fit1)
fit2 <- lm(mpg~ am + wt + cyl, data = mtcars)
summary(fit2)
fit3 <- lm(mpg~ am + wt + cyl + qsec, data = mtcars)
summary(fit3)
fit3 <- lm(mpg~ am + wt + qsec, data = mtcars)
summary(fit3)
fit3 <- lm(mpg~ am + wt + qsec + hp, data = mtcars)
summary(fit3)
fit3 <- lm(mpg~ am + wt + qsec, data = mtcars)
?resid
resid(fit3)
summary(resid(fit3))
summary(resid(all_model))
summary(resid(fit1))
summary(resid(fit2))
summary(resid(fit))
summary(fit3)
mtcars$cyl <- factor(mtcars$cyl,labels=c("4","6", "8"))
mtcars$cyl
best_fit <- step(all_model, direction = "both")
summary(best_fit)
t.test(fit3)
t.test(mpg~am+wt+sqec, data = mtcars)
t.test(mpg~am, data = mtcars)
?mtcars
leverage <- hatvalues(fit3)
tail(sort(leverage),3)
influential <- dfbetas(fit3)
tail(sort(influential[,6]),3)
head(influential)
influential <- dfbetas(fit3)
tail(sort(influentia),3)
influential <- dfbetas(fit3)
tail(sort(influential),3)
influential <- dfbetas(fit3)
tail(sort(influential))
sort(influential)
leverage
sum(leverage)
sample(1, 0:1)
sample(1, 0:1)
sample(1, 0:1)
sample(1, 0:1)
sample(0:1,1)
sample(0:1,1)
sample(0:1,1)
sample(0:1,1)
library(shiny)
install.packages("shiny")
?manipulate
library(manipulate)
?manipulate
runExample("01_hello")
library(shiny)
runExample("01_hello")
install.packages("rCharts")
library(caret)
install.packages("caret")
?caret
??caret
shiny::runApp('Documents/Coursera/Shiny/App-1')
shiny::runApp('Documents/Coursera/Shiny/App-1')
?RGoogleDocs
install.packages(RGoogleDocs)
library("RGoogleDocs")
install.packages("RGoogleDocs")
?RGoogleDocs
library(RGoogleDocs)
install.packages("rDrop")
require("rDrop")
?dropbox_auth
??dropbox_auth
??rDrop
require("RGoogleDocs")
install.packages("RGoogleDocs")
install.packages("rCharts")
library(caret)
library(devtools)
install_github('slidify','ramnathv')
library(caret)
library(kernlab); data(spam)
install.packages("kernlab")
library(kernlab); data(spam)
install.packages("Hmisc")
library(slidify)
setwd"~/Documents/Data/Git"
setwd("~/Documents/Data/Git")
author("data_products_presentation")
setwd("~/Documents/Data/Git/Presentations")
slidify("index.rmd")
